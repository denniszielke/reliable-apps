apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-sink-app
  labels:
    app: message-sink
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: message-sink
  template:
    metadata:
      labels:
        app: message-sink
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "message-sink"
        dapr.io/app-port: "8080"
    spec:
      containers:
      - name: message-sink
        image: ghcr.io/{.registry}/reliable-apps/message-sink:{.tag}
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "250Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "300m"
        env: 
          - name: "PORT"
            value: "8080"
          - name: "VERSION"
            value: "{.version}"
          - name: "ASPNETCORE_URLS"
            value: "http://+:8080"
          - name: "IpRateLimiting__EnableEndpointRateLimiting"
            value: "{.enableRateLimiting}"
          - name: "ConnectionStrings__CosmosApi"
            valueFrom:
              secretKeyRef:
                name: appconfig
                key: cosmosConnectionString
          - name: "ApplicationInsights__ConnectionString"
            valueFrom:
              secretKeyRef:
                name: appconfig
                key: applicationInsightsConnectionString